
package com.july19;
import java.util.Random;
import java.util.Scanner;
import java.util.InputMismatchException;
public class BankingApp {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        BankAccount acc1 = new BankAccount("12345", "pass123", 10000);
        BankAccount acc2 = new BankAccount("67890", "pass456", 5000);
        System.out.print("Enter Account No: ");
        String accNo = sc.next();
        System.out.print("Enter Password: ");
        String pwd = sc.next();
        BankAccount currentUser = null;
        if (acc1.verifyCredentials(accNo, pwd)) {
            currentUser = acc1;
        } else if (acc2.verifyCredentials(accNo, pwd)) {
            currentUser = acc2;
        }
        if (currentUser == null) {
            System.out.println("Invalid credentials! Exiting...");
            sc.close();
            return;
        }
        System.out.println("Login successful! Current Balance: " + currentUser.getBalance());
        int choice;
        do {
            System.out.println("\nChoose an option:");
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Transfer");
            System.out.println("4. View Balance");
            System.out.println("5. Logout");
            System.out.print("Enter your choice: ");
            try {
                choice = sc.nextInt();
                switch (choice) {
                    case 1:
                        System.out.print("Enter deposit amount: ");
                        double depositAmt = sc.nextDouble();
                        currentUser.deposit(depositAmt);
                        break;
                    case 2:
                        System.out.print("Enter withdrawal amount: ");
                        double withdrawAmt = sc.nextDouble();
                        currentUser.withdraw(withdrawAmt);
                        break;
                    case 3:
                        System.out.print("Enter receiver account number: ");
                        String recvAccNo = sc.next();
                        BankAccount receiver = null;
                        if (recvAccNo.equals(acc1.getAccountNo())) {
                            receiver = acc1;
                        } else if (recvAccNo.equals(acc2.getAccountNo())) {
                            receiver = acc2;
                        }
                        if (receiver == null) {
                            System.out.println("Receiver account not found!");
                            break;
                        }
                        if (receiver.getAccountNo().equals(currentUser.getAccountNo())) {
                            System.out.println("Cannot transfer to yourself.");
                            break;
                        }
                        System.out.print("Enter transfer amount: ");
                        double transferAmt = sc.nextDouble();
                        
                        int otp = 1000 + new Random().nextInt(9000);
                        System.out.println("Generated OTP: " + otp);
                        System.out.print("Enter OTP to confirm transfer: ");
                        int userOtp = sc.nextInt();
                        currentUser.transfer(receiver, transferAmt, otp, userOtp);
                        break;
                    case 4:
                        System.out.println("Current Balance: " + currentUser.getBalance());
                        break;
                    case 5:
                        System.out.println("Logout successful.");
                        break;
                    default:
                        System.out.println("Invalid choice!");
                }
            } catch (InputMismatchException e) {
                System.out.println("Invalid input. Please enter a number.");
                sc.nextLine();
                choice = 0;
            }
        } while (choice != 5);
        sc.close();
    }
}

